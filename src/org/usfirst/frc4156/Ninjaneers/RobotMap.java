// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4156.Ninjaneers;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import com.ctre.CANTalon.TalonControlMode;

import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController robotDriveSubsystemLeftSpeedController;
    public static SpeedController robotDriveSubsystemRightSpeedController;
    public static RobotDrive robotDriveSubsystemArcadeDrive;
    public static CANTalon shootingSubSystemShooterMotor;
    public static CANTalon shootingSubSystemAngleMotor;
    public static CANTalon gearSubsystemGearReleaseMotor;
    public static CANTalon feederSubsystemFeederMotorControl;
    public static SpeedController climbRopeSubsystemRopeClimbController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        robotDriveSubsystemLeftSpeedController = new Spark(1);
        LiveWindow.addActuator("RobotDriveSubsystem", "Left Speed Controller", (Spark) robotDriveSubsystemLeftSpeedController);
        
        robotDriveSubsystemRightSpeedController = new Spark(0);
        LiveWindow.addActuator("RobotDriveSubsystem", "Right Speed Controller", (Spark) robotDriveSubsystemRightSpeedController);
        
        robotDriveSubsystemArcadeDrive = new RobotDrive(robotDriveSubsystemLeftSpeedController, robotDriveSubsystemRightSpeedController);
        
        robotDriveSubsystemArcadeDrive.setSafetyEnabled(false);
        robotDriveSubsystemArcadeDrive.setExpiration(0.1);
        robotDriveSubsystemArcadeDrive.setSensitivity(0.5);
        robotDriveSubsystemArcadeDrive.setMaxOutput(1.0);

        shootingSubSystemShooterMotor = new CANTalon(4);
        LiveWindow.addActuator("ShootingSubSystem", "Shooter Motor", shootingSubSystemShooterMotor);
        
        shootingSubSystemAngleMotor = new CANTalon(2);
        LiveWindow.addActuator("ShootingSubSystem", "Angle Motor", shootingSubSystemAngleMotor);
        
        gearSubsystemGearReleaseMotor = new CANTalon(1);
        LiveWindow.addActuator("GearSubsystem", "Gear Release Motor", gearSubsystemGearReleaseMotor);
        
        feederSubsystemFeederMotorControl = new CANTalon(3);
        LiveWindow.addActuator("FeederSubsystem", "Feeder Motor Control", feederSubsystemFeederMotorControl);
        
        climbRopeSubsystemRopeClimbController = new Victor(2);
        LiveWindow.addActuator("ClimbRopeSubsystem", "Rope Climb Controller", (Victor) climbRopeSubsystemRopeClimbController);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
