// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4156.Ninjaneers.subsystems;

import org.usfirst.frc4156.Ninjaneers.RobotMap;
import org.usfirst.frc4156.Ninjaneers.XBoxControllerMap;
import org.usfirst.frc4156.Ninjaneers.commands.DriveRobot;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class RobotDriveSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

//    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
//    private final SpeedController leftSpeedController = RobotMap.robotDriveSubsystemLeftSpeedController;
//    private final SpeedController rightSpeedController = RobotMap.robotDriveSubsystemRightSpeedController;
    
    private final RobotDrive arcadeDrive = RobotMap.robotDriveSubsystemArcadeDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    	setDefaultCommand(new DriveRobot());
    }
    
    public void drive(double leftAxis, double rightAxis){
    	arcadeDrive.arcadeDrive(leftAxis, rightAxis);
    }
    
    public void drive(Joystick controller){
    	arcadeDrive.arcadeDrive(controller.getRawAxis(XBoxControllerMap.LeftJoystickY), 
    						controller.getRawAxis(XBoxControllerMap.RightJoystickX) * -1);
    }
    
    public void stop(){
    	arcadeDrive.arcadeDrive(0, 0);
    }
}

